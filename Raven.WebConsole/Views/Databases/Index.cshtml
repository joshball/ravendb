@using Raven.WebConsole.Utils
@model Raven.WebConsole.ViewModels.DatabasesViewModel

@{
    ViewBag.Title = "Databases";
    Layout = "~/Views/Shared/ContentPage.cshtml";
}

<div class="head">
    <h1 style="float:left;">@ViewBag.Title</h1>
    <a id="newButton" class="button" style="float:right;" href="javascript:void(0);">Create a new database</a>
    <div style="float:none;clear:both"></div>
<div/>

<ul class="flach db">
    @foreach (var db in Model.Databases)
    {
        <li class="db" data-db="@db.Name">
            <a class="name link-on-hover" title="Click to open studio" href="@(Model.BaseUrl)/raven/studio.html#/home?database=@db.Name">@db.Name</a>
            <ul class="props">
                <li>
                    <span class="name">Size:</span><span class="value">@db.SizeMb MB</span>
                </li>
                <li>
                    <span class="name">Last backup:</span><span class="value"><span class="humaneDate" data-date="@db.LastBackup.ToJavascriptDate()"></span></span>
                </li>
            </ul>
            <ul class="buttons">
                <li>
                    <a class="delete button" href="javascript:void(0);">Delete</a>
                    <form style="display: none" action="@Url.Action("Delete", new {name=db.Name})" method="post"></form>
                </li>
                <li><a class="backup button" href="javascript:void(0);">Backup</a></li>
                <li><a class="restore button" href="javascript:void(0);">Restore</a></li>
            </ul>
        </li>
    }
</ul>

<script type="text/javascript">
    $(document).ready(function () {
        var updateDates = function () {
            $('.humaneDate').each(function() {
                var $t = $(this);
                var d = $t.data('date');
                var s = d == '' ? 'Never' : humaneDate(new Date(d));
                $t.html(s);
            });
        };

        setTimeout(function () {
            updateDates();
            setTimeout(updateDates, 60 * 1000);
        });

        updateDates();
    });
</script>

<div id="newDialog">
    <form action="@Url.Action("New")" method="post" style="margin-top: 20px; margin-bottom: 20px">
        <fieldset>
            <legend></legend>
            <label for="name">Name: </label>
            <input type="text" name="name" />
        </fieldset>
    </form>
</div>

<div id="backupDialog">
    <form action="@Url.Action("Backup")" method="post" style="margin-top: 20px; margin-bottom: 20px">
        <fieldset>
            <legend></legend>
            <table>
                <tr>
                    <td><label for="path">Path: </label></td>
                    <td><input type="text" name="path" /></td>
                </tr>
            </table>
            <input type="hidden" name="name"/>
        </fieldset>
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        $('#newButton').button({ icons: { primary: 'ui-icon-plus'} });
        $('.button.delete')
            .on('click', function(e) {
                var button = $(e.target);

                var db = button.parents('li.db').data('db');
                if (!confirm($.format("About to delete database {0}.\nAre you sure?", db))) {
                    return false;
                }

                $(this).parent().find('form').submit();
                return true;
            })
            .button({ icons: { primary: 'ui-icon-trash'} });
        
        $('.button.restore')
            .button({ icons: { primary: 'rd-icon-restore'} });
        
        $('.button.backup')
            .button({ icons: { primary: 'rd-icon-backup'} })
            .on('click', function (e) {
                var db = $(e.target).parents('.db').data('db');
                var dialog = $('#backupDialog');
                dialog.find('input[name=name]').val(db);
                dialog.dialog('open');
            });

        $('#backupDialog form')
            .ajaxForm({
                beforeSubmit: function (vals, form) {
                    return form.valid();
                },
                success: function(responseText, statusText, xhr, form) {
                    var db = form.find('input[name=name]').val();
                    raven.ui.displayMessage($.format('Backup for database {0} has started', db));
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    raven.ui.displayMessage($.format('There was an error backing up the database: {0}', errorThrown), 'warning');
                }
            })
            .validate({
                rules: {
                    path: {
                        required: true,
                        remote: "@Url.Action("PathExists")"
                    }
                },
                submitHandler: function (form) {
                    $('#backupDialog').dialog('close');
                    $(form).ajaxSubmit();
                }
        });

        $('#backupDialog').dialog({
            autoOpen: false,
            modal: true,
            title: 'Backup database',
            width: 400,
            buttons: {
                'Start Backup': function () {
                    $(this).find('form').submit();
                },
                'Cancel': function () {
                    $(this).dialog('close');
                }
            }
        });

        $('#newDialog form').validate({
            rules: {
                name: {
                    required: true,
                    minlength: 3,
                    remote: {url: "@Url.Action("ValidateName")", cache: false}
                }
            }
        });
        
        $('#newDialog').dialog({
            autoOpen: false,
            modal: true,
            title: "Create a new database",
            width: 500,
            buttons: {
                "Create": function () {
                    $(this).find('form').submit();
                },
                "Cancel": function () {
                    $(this).dialog('close');
                }
            }
        });

        $('#newButton').on('click', function () { $('#newDialog').dialog('open'); });
        
    });
</script>
